// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id               String         @id @default(cuid())
  username         String         @unique
  email            String         @unique
  password         String?
  profileImageUrl  String?
  profileImageKey  String?
  role             String
  emailVerified    Boolean?
  verificationCode String?
  codeExpiredTime  DateTime?
  resetToken       String?
  resetTokenExpiry DateTime?
  favouriteIds     Favourites[]
  listings         UserListings[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model UserListings {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId String
  asignedBy String

  @@id([userId, listingId])
}

model Favourites {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId String
  asignedBy String

  @@id([userId, listingId])
}

model Listing {
  id              String         @id @default(cuid())
  title           String
  description     String         @default("No Description")
  township        String
  type            String
  price           Int
  location        Location?
  amenties        Amenties?
  availability    Boolean
  latitude        Float
  longitude       Float
  images          Image[]
  favouritedUsers Favourites[]
  UserListings    UserListings[]
}

model Image {
  id         String  @id @default(cuid())
  url        String
  img_key    String
  listing    Listing @relation(fields: [listing_id], references: [id], onDelete: Cascade)
  listing_id String
}

model Location {
  street    String
  ward      String
  township  String
  city      String
  listingId String
  num       String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@unique([listingId])
}

model Amenties {
  bedroom   Int
  bath      Int
  parking   Boolean
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId String

  @@unique([listingId])
}
